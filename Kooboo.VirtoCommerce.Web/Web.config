<?xml version="1.0"?>
<!-- 
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <section name="cache.notify" type="Kooboo.CMS.Caching.NotifyRemote.CacheNotificationSection,Kooboo.CMS.Caching.NotifyRemote" requirePermission="false"/>
    <section name="routeTable" type="Kooboo.Web.Mvc.Routing.RouteTableSection, Kooboo" requirePermission="false"/>
    <section name="webResources" type="Kooboo.Web.Mvc.WebResourceLoader.Configuration.WebResourcesSection, Kooboo" requirePermission="false"/>
    <sectionGroup name="system.web.webPages.razor" type="System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <section name="host" type="System.Web.WebPages.Razor.Configuration.HostSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false"/>
      <section name="pages" type="System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false"/>
    </sectionGroup>
    <!--VCF config:start-->
    <sectionGroup name="VirtoCommerce" type="System.Configuration.ConfigurationSectionGroup,System.Configuration, Version=4.0.0.0, Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a">
      <section name="DynamicContent" type="VirtoCommerce.Foundation.Marketing.DynamicContent.DynamicContentConfiguration, VirtoCommerce.Foundation, Version=1.0.4903.14669,Culture=neutral, PublicKeyToken=null" />
      <section name="Marketing" type="VirtoCommerce.Foundation.Marketing.MarketingConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.14669, Culture=neutral,PublicKeyToken=null" />
      <section name="AppConfig" type="VirtoCommerce.Foundation.AppConfig.AppConfigConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Asset" type="VirtoCommerce.Foundation.Assets.AssetConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="AzureRepository" type="VirtoCommerce.Foundation.Data.Azure.AzureConfiguration, VirtoCommerce.Foundation.Data.Azure" />
      <section name="Catalog" type="VirtoCommerce.Foundation.Catalogs.CatalogConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Customer" type="VirtoCommerce.Foundation.Customers.CustomerConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Import" type="VirtoCommerce.Foundation.Importing.ImportConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Inventory" type="VirtoCommerce.Foundation.Inventories.InventoryConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Order" type="VirtoCommerce.Foundation.Orders.OrderConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Review" type="VirtoCommerce.Foundation.Reviews.ReviewConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Search" type="VirtoCommerce.Foundation.Search.SearchConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Security" type="VirtoCommerce.Foundation.Security.SecurityConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Store" type="VirtoCommerce.Foundation.Stores.StoreConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
      <section name="Workflow" type="VirtoCommerce.Foundation.Frameworks.Workflow.WorkflowConfiguration,VirtoCommerce.Foundation, Version=1.0.4903.1642, Culture=neutral,PublicKeyToken=null" />
    </sectionGroup>

    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
    <!--VCF config:end-->
  </configSections>
  <!--VCF config:start-->
  <VirtoCommerce>
    <DynamicContent>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true" dynamicContentTimeout="0:0:10" />
    </DynamicContent>
    <Marketing>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true" promotionsTimeout="0:0:5" />
    </Marketing>
    <Store>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true" storeTimeout="0:2:30" fulfillmentCenterTimeout="0:2:30">
      </Cache>
    </Store>
    <Workflow>
      <activityProvider defaultProvider="ResourceActivityProvider">
        <providers>
          <add name="ResourceActivityProvider" type="VirtoCommerce.Foundation.Frameworks.Workflow.Providers.ResourceWorkflowActivityProvider, VirtoCommerce.Foundation" />
        </providers>
      </activityProvider>
      <availableWorkflows>
        <add name="ShoppingCartValidateWorkflow" type="VirtoCommerce.OrderWorkflow.ShoppingCartValidateWorkflow,VirtoCommerce.OrderWorkflow" />
        <add name="ShoppingCartPrepareWorkflow" type="VirtoCommerce.OrderWorkflow.ShoppingCartPrepareWorkflow,VirtoCommerce.OrderWorkflow" />
        <add name="ShoppingCartCheckoutWorkflow" type="VirtoCommerce.OrderWorkflow.ShoppingCartCheckoutWorkflow,VirtoCommerce.OrderWorkflow" />
        <add name="OrderRecalculateWorkflow" type="VirtoCommerce.OrderWorkflow.OrderRecalculateWorkflow,VirtoCommerce.OrderWorkflow" />
        <add name="CalculateReturnTotalsWorkflow" type="VirtoCommerce.OrderWorkflow.CalculateReturnTotalsWorkflow,VirtoCommerce.OrderWorkflow" />
      </availableWorkflows>
    </Workflow>
    <AppConfig>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true" settingsTimeout="0:7:00" localizationTimeout="0:7:00">
      </Cache>
    </AppConfig>
    <Asset>
      <Connection storageFolder="~/App_Data/Virto/Storage" wsEndPointName="" dataServiceUri="" />
    </Asset>
    <AzureRepository CQRSOrderQueueName="order-in" CQRSCatalogQueueName="catalog-in" timeToProcessQueueMessage="3">
      
  <!--<Connection
connectionString="AccountName=virto2;AccountKey=Q7NFrsEgfuB4ZF8qpVTerL3kx/
CliOGmz7MRsA3geLFJRGSMQvVq62xGfvHzIJXjlYmJexlpvJP5U4ilMmbZYg==;DefaultEndp
ointsProtocol=http"/>-->
  
      <Connection sqlConnectionStringName="VirtoCommerce" storageConnectionStringName="DataConnectionString" />
    </AzureRepository>
    <Catalog>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" dataServiceBaseUriName="" />
      <Cache enabled="true" catalogTimeout="0:7:0" itemCollectionTimeout="0:5:0" itemTimeout="0:5:0" categoryCollectionTimeout="0:5:0" categoryTimeout="0:5:0" pricelistTimeout="0:5:0" pricesTimeout="0:1:0" propertiesTimeout="0:0:59" preloadPrices="true">
      </Cache>
    </Catalog>
    <Customer>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true" customerTimeout="0:0:30" organizationTimeout="0:0:30" rulesTimeout="0:1:0">
      </Cache>
    </Customer>
    <Import>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" dataServiceBaseUriName="" />
      <Importing wsEndPointName="" />
      <Cache enabled="true" importJobTimeout="0:7:0" columnMappingTimeout="0:5:0" mappingItemTimeout="0:5:0">
      </Cache>
    </Import>
    <Inventory>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true" inventoryTimeout="0:0:30">
      </Cache>
    </Inventory>
    <Order>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <OrderServiceConnection wsEndPointName="" />
      <Cache enabled="true">
      </Cache>
    </Order>
    <Review>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Cache enabled="true">
      </Cache>
    </Review>
    <Search>
      <Connection sqlConnectionStringName="VirtoCommerce" />
      <Cache enabled="true" filtersTimeout="0:2:0">
      </Cache>
    </Search>
    <Security>
      <Connection wsEndPointName="" sqlConnectionStringName="VirtoCommerce" dataServiceUri="" />
      <Authentication wsEndPointName="" />
      <TokenIssuer uri="http://localhost/sts" lifetime="1:0:0" signatureKey="WRwJkQ9PgbhnIUgKuuovw/6yVAo/Dh0qrb7rqQWnsBk=" />
      <TokenValidator trustedIssuerUri="http://localhost/sts" signatureKey="WRwJkQ9PgbhnIUgKuuovw/6yVAo/Dh0qrb7rqQWnsBk=" />
    </Security>
  </VirtoCommerce>
  <!--VCF config:end-->
  <!-- delay: second-->
  <!--<cache.notify>
    <servers>
      <add name="localhost" url="http://127.0.0.1/sites/cache/clear" delay="0"/>
    </servers>
  </cache.notify>-->
  <routeTable configSource="routes.config"/>
  <webResources configSource="WebResources.config"/>
  <appSettings>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
    <add key="webpages:Version" value="2.0.0.0"/>
    <add key="PreserveLoginUrl" value="true"/>
    <add key="aspnet:MaxJsonDeserializerMembers" value="150000"/>
    <add key="DefaultStore" value="SampleStore" />
    <add key="SchedulerHost" value="Primary" />
    <!--Primary, Secondary, None -->
	<add key="forceSSL_AdminPages" value="false"/>
    <!--VCF config:start-->
    <add key="DefaultStore" value="SampleStore" />
    <!--VCF config:end-->
  </appSettings>
  <connectionStrings configSource="app_data\virto\configuration\connectionStrings.local.config" />
  <system.web.webPages.razor>
    <host factoryType="System.Web.Mvc.MvcWebRazorHostFactory, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    <pages pageBaseType="System.Web.Mvc.WebViewPage">
      <namespaces>
        <add namespace="System.Web.Mvc"/>
        <add namespace="System.Web.Mvc.Ajax"/>
        <add namespace="System.Web.Mvc.Html"/>
        <add namespace="System.Web.Routing"/>
        <add namespace="Kooboo"/>
        <add namespace="Kooboo.Extensions"/>
        <add namespace="Kooboo.Web.Mvc"/>
        <add namespace="Kooboo.Web.Mvc.Html"/>
        <add namespace="Kooboo.CMS.Sites.View"/>
        <add namespace="Kooboo.CMS.Sites.Globalization"/>
        <add namespace="Kooboo.Web.Mvc.WebResourceLoader"/>
        <add namespace="Kooboo.Globalization"/>
        <add namespace="Kooboo.Web.Mvc.Grid"/>
        <add namespace="Kooboo.Web.Mvc.Grid2"/>
        <add namespace="Kooboo.Web.Mvc.Paging"/>
        <add namespace="Kooboo.CMS.Web"/>
        <add namespace="Kooboo.CMS.Content.Models"/>
        <add namespace="Kooboo.CMS.Sites.Models"/>
        <add namespace="Kooboo.CMS.Sites.Services"/>
        <add namespace="Kooboo.CMS.Membership"/>
        <add namespace="Kooboo.CMS.Sites.Membership"/>
        <add namespace="Kooboo.CMS.Content.Query"/>
        <add namespace="Kooboo.CMS.Form"/>
        <add namespace="Kooboo.CMS.Form.Html"/>
        <add namespace="Kooboo.CMS.Sites.Extension.ModuleArea"/>
        <add namespace="Kooboo.CMS.Common.Persistence.Non_Relational"/>
      </namespaces>
    </pages>
  </system.web.webPages.razor>
  <system.web>
    <roleManager enabled="true" />
    <siteMap defaultProvider="MvcSiteMapProvider" enabled="true">
      <providers>
        <clear />
        <add name="MvcSiteMapProvider" type="MvcSiteMapProvider.DefaultSiteMapProvider, MvcSiteMapProvider" siteMapFile="~/Areas/VirtoCommerce/Store.sitemap" securityTrimmingEnabled="true" cacheDuration="5" enableLocalization="true" scanAssembliesForSiteMapNodes="true" includeAssembliesForScan="" excludeAssembliesForScan="" attributesToIgnore="visibility" nodeKeyGenerator="MvcSiteMapProvider.DefaultNodeKeyGenerator, MvcSiteMapProvider" controllerTypeResolver="MvcSiteMapProvider.DefaultControllerTypeResolver, MvcSiteMapProvider" actionMethodParameterResolver="MvcSiteMapProvider.DefaultActionMethodParameterResolver, MvcSiteMapProvider" aclModule="MvcSiteMapProvider.DefaultAclModule, MvcSiteMapProvider" siteMapNodeUrlResolver="MvcSiteMapProvider.DefaultSiteMapNodeUrlResolver, MvcSiteMapProvider" siteMapNodeVisibilityProvider="VirtoCommerce.Web.Client.Extensions.NamedSiteMapNodeVisibilityProvider, VirtoCommerce.WebClient" siteMapProviderEventHandler="MvcSiteMapProvider.DefaultSiteMapProviderEventHandler, MvcSiteMapProvider" />
      </providers>
    </siteMap>
    <customErrors mode="Off"/>
    <caching>
      <!-- Output cache is in progress and has to be disabled-->
      <outputCache enableOutputCache="false" />
      <outputCacheSettings>
        <outputCacheProfiles>
          <add name="CatalogCache" duration="30" varyByParam="*" />
          <add name="HomeCache" duration="30" varyByParam="*" varyByCustom="store" />
          <add name="SearchCache" duration="30" varyByParam="*" />
          <add name="BannerCache" duration="10" varyByParam="placeName" />
          <add name="AssetCache" duration="300" varyByParam="path" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching> 
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </assemblies>
    </compilation>
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="2880" defaultUrl="~/Sites/home/index"/>
    </authentication>
    <pages pageParserFilterType="System.Web.Mvc.ViewTypeParserFilter, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" pageBaseType="System.Web.Mvc.ViewPage, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" userControlBaseType="System.Web.Mvc.ViewUserControl, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" controlRenderingCompatibilityVersion="4.0">
      <namespaces>
        <add namespace="System.Web.Mvc"/>
        <add namespace="System.Web.Mvc.Ajax"/>
        <add namespace="System.Web.Mvc.Html"/>
        <add namespace="System.Web.Routing"/>
        <add namespace="System.Linq"/>
        <add namespace="System.Collections"/>
        <add namespace="System.Collections.Generic"/>
        <add namespace="Kooboo.Extensions"/>
        <add namespace="Kooboo.Globalization"/>
        <add namespace="Kooboo.Web.Mvc"/>
        <add namespace="Kooboo.Web.Mvc.Html"/>
        <add namespace="Kooboo.Web.Mvc.Grid"/>
        <add namespace="Kooboo.Web.Mvc.Paging"/>
        <add namespace="Kooboo.Web.Mvc.WebResourceLoader"/>
        <add namespace="Kooboo.CMS.Web"/>
        <add namespace="Kooboo.CMS.Content.Models"/>
        <add namespace="Kooboo.CMS.Sites.Models"/>
        <add namespace="Kooboo.CMS.Sites.Services"/>
        <add namespace="Kooboo.CMS.Membership"/>
        <add namespace="Kooboo.CMS.Sites.Membership"/>
        <add namespace="Kooboo.CMS.Form"/>
        <add namespace="Kooboo.CMS.Form.Html"/>
        <add namespace="Kooboo.CMS.Sites.View"/>
        <add namespace="Kooboo.CMS.Sites.Globalization"/>
        <add namespace="Kooboo.CMS.Sites.Extension.ModuleArea"/>
        <add namespace="Kooboo.CMS.Common.Persistence"/>

        <add namespace="MvcSiteMapProvider.Web.Html" />
        
      </namespaces>
    </pages>
    <httpModules>
      <remove name="UrlRoutingModule-4.0"/>
      <add name="UrlRoutingModule-4.0" type="Kooboo.CMS.Sites.Web.FrontUrlRoutingModule,Kooboo.CMS.Sites"/>
      <add name="KoobooCMSResponseHeader" type="Kooboo.CMS.Sites.Web.KoobooCMSResponseModule,Kooboo.CMS.Sites"/>
      <add name="StartPagePublishingJob" type="Kooboo.CMS.Sites.Services.StartPagePublishingJobModule,Kooboo.CMS.Sites"/>
    </httpModules>
    <healthMonitoring>
      <providers>
        <add name="KoobooCMSTextFileProvider" type="Kooboo.CMS.Web.HealthMonitoring.TextFileWebEventProvider,Kooboo.CMS.Web"/>
      </providers>
      <rules>
        <add name="Kooboo Event Default" eventName="Kooboo Event" provider="KoobooCMSTextFileProvider" profile="Default" minInstances="1" maxLimit="Infinite" minInterval="00:00:30" custom=""/>
        <add name="All Errors Kooboo" eventName="All Errors" provider="KoobooCMSTextFileProvider" profile="Default" minInstances="1" maxLimit="Infinite" minInterval="00:00:30" custom=""/>
      </rules>
      <eventMappings>
        <add name="Kooboo Event" type="Kooboo.HealthMonitoring.WebRequestErrorEventWrapper,Kooboo" startEventCode="0" endEventCode="2147483647"/>
      </eventMappings>
    </healthMonitoring>
    <httpRuntime maxRequestLength="30000000" targetFramework="4.5"/>
    <!--VCF config:start-->
    <anonymousIdentification enabled="true" />
    <!--VCF config:end-->
  </system.web>

  <system.serviceModel>
    <services configSource="app_data\virto\configuration\services.local.config" />
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" minFreeMemoryPercentageToActivateService="0">
      <serviceActivations>
        <!-- SOAP Services -->
        <add relativeAddress="~/Virto/Services/AuthenticationService.svc" service="VirtoCommerce.Web.Client.Services.Security.AuthenticationService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/AssetService.svc" service="VirtoCommerce.Foundation.Assets.Services.AssetService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/ImportService.svc" service="VirtoCommerce.Foundation.Importing.Services.ImportService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/SecurityService.svc" service="VirtoCommerce.Web.Client.Services.Security.SecurityService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/OrderService.svc" service="VirtoCommerce.Foundation.Orders.Services.OrderService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <add relativeAddress="~/Virto/Services/SequenceService.svc" service="VirtoCommerce.Web.Client.Services.Sequences.SequenceService" factory="System.ServiceModel.Activation.ServiceHostFactory" />
        <!-- OData Services -->
        <add relativeAddress="~/Virto/DataServices/ImportDataService.svc" service="VirtoCommerce.Foundation.Data.Importing.DSImportService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/AppConfigDataService.svc" service="VirtoCommerce.Foundation.Data.AppConfig.DSAppConfigService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/CatalogDataService.svc" service="VirtoCommerce.Foundation.Data.Catalogs.DSCatalogService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/CustomerDataService.svc" service="VirtoCommerce.Foundation.Data.Customers.DSCustomerService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/DynamicContentDataService.svc" service="VirtoCommerce.Foundation.Data.Marketing.DSDynamicContentService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/InventoryDataService.svc" service="VirtoCommerce.Foundation.Data.Inventories.DSInventoryService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/MarketingDataService.svc" service="VirtoCommerce.Foundation.Data.Marketing.DSMarketingService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/OrderDataService.svc" service="VirtoCommerce.Foundation.Data.Orders.DSOrderService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/ReviewDataService.svc" service="VirtoCommerce.Foundation.Data.Reviews.ReviewDataService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/SearchDataService.svc" service="VirtoCommerce.Foundation.Data.Search.DSSearchService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/SecurityDataService.svc" service="VirtoCommerce.Foundation.Data.Security.DSSecurityService" factory="System.Data.Services.DataServiceHostFactory" />
        <add relativeAddress="~/Virto/DataServices/StoreDataService.svc" service="VirtoCommerce.Foundation.Data.Stores.DSStoreService" factory="System.Data.Services.DataServiceHostFactory" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings>
      <webHttpBinding>
        <binding maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="32" maxStringContentLength="819200" maxArrayLength="506384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
        </binding>
      </webHttpBinding>
      <wsHttpBinding>
        <!-- Default endpoint -->
        <binding maxReceivedMessageSize="2147483647"></binding>
        <binding name="NonAuthenticationServiceBinding" maxReceivedMessageSize="2147483647">
          <security mode="None">
            <message clientCredentialType="None" />
          </security>
        </binding>
        <binding name="AuthenticationServiceBinding" maxReceivedMessageSize="2147483647">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="506384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <message clientCredentialType="None" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="non_secure_behavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!-- comment out this line to disable tokens, good for testing services through a web browser -->
          <serviceAuthorization serviceAuthorizationManagerType="VirtoCommerce.Web.Client.Services.Security.OAuthAuthorizationManager, VirtoCommerce.WebClient" principalPermissionMode="Custom" />
        </behavior>
        <behavior name="DataServiceBehavior">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="errorHandler" type="VirtoCommerce.Web.Client.Services.ErrorHandlerElement, VirtoCommerce.WebClient" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="UrlRoutingModule-4.0"/>
      <add name="UrlRoutingModule-4.0" type="Kooboo.CMS.Sites.Web.FrontUrlRoutingModule,Kooboo.CMS.Sites"/>
      <add name="KoobooCMSResponseHeader" type="Kooboo.CMS.Sites.Web.KoobooCMSResponseModule,Kooboo.CMS.Sites"/>
      <add name="StartPagePublishingJob" type="Kooboo.CMS.Sites.Services.StartPagePublishingJobModule,Kooboo.CMS.Sites"/>
    </modules>
    <!--<staticContent> 
      <clientCache  cacheControlCustom="public" cacheControlMode="UseMaxAge" cacheControlMaxAge="30.00:00:00" />
    </staticContent>-->
  </system.webServer>
  <system.net>
    <mailSettings>
      <smtp from="no-reply@kooboo.com">
        <network host="127.0.0.1"/>
      </smtp>
    </mailSettings>
  </system.net>
  <!--VCF config:start-->
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Data.OData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0"/>
      </dependentAssembly>
		<dependentAssembly>
			<assemblyIdentity name="Microsoft.Data.Edm" publicKeyToken="31bf3856ad364e35" culture="neutral" />
			<bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
		</dependentAssembly>
		<dependentAssembly>
			<assemblyIdentity name="System.Spatial" publicKeyToken="31bf3856ad364e35" culture="neutral" />
			<bindingRedirect oldVersion="0.0.0.0-5.4.0.0" newVersion="5.4.0.0" />
		</dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
	<!--<dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>-->
      <!--<dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>-->
    </assemblyBinding>
  </runtime>

  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost"/>-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud"/>
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
  
  <!--VCF config:end-->
</configuration>